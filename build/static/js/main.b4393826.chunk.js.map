{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","props","reset","preventDefault","onSubmit","this","className","c","form","label","input","type","pattern","title","onChange","required","form__btn","Component","ContactListItem","id","onDeleteContact","onClick","btn__item","ContactList","contacts","map","item","Filter","changefilter","App","filter","formSubmitHandler","data","includes","alert","contact","nanoid","deleteContact","idContact","getVisibleContacts","normalizeFilter","toLowerCase","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4393826.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2tOIO\",\"input\":\"Filter_input__3eW5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__oTgV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn__item\":\"ContactListItem_btn__item__33lOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1tbx1\",\"input\":\"ContactForm_input__3XFiT\",\"label\":\"ContactForm_label__sS0pa\",\"form__btn\":\"ContactForm_form__btn__1-4f_\"};","import React, { Component } from 'react';\nimport c from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { props, reset, state } = this;\n\n    e.preventDefault();\n\n    props.onSubmit(state);\n\n    reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleChange } = this;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} className={c.form}>\n          <label className={c.label}>\n            Name\n            <input\n              className={c.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              value={name}\n              onChange={handleChange}\n              required\n            />\n          </label>\n\n          <label className={c.label}>\n            Number\n            <input\n              className={c.input}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              value={number}\n              onChange={handleChange}\n              required\n            />\n          </label>\n          <button type=\"submit\" className={c.form__btn}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport c from './ContactListItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\n  return (\n    <>\n      <p>{name + ': ' + number}</p>\n      <button\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n        className={c.btn__item}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport c from './ContactList.module.css';\nimport ContactListItem from '../ContactListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <ul>\n        {contacts.map(({ name, number, id }) => (\n          <li key={id} className={c.item}>\n            <ContactListItem\n              name={name}\n              number={number}\n              id={id}\n              onDeleteContact={onDeleteContact}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport c from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, changefilter }) => {\n  return (\n    <>\n      <label className={c.label}>\n        Find contacts by name\n        <input\n          className={c.input}\n          type=\"text\"\n          value={value}\n          onChange={changefilter}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changefilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const isNewName = this.state.contacts\n      .map(({ name }) => name)\n      .includes(data.name);\n\n    if (isNewName) {\n      alert(`${data.name} is already in contacts `);\n    } else {\n      const contact = { id: nanoid(), ...data };\n\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = idContact => {\n    this.setState(({ contacts }) => {\n      return {\n        contacts: contacts.filter(({ id }) => id !== idContact),\n      };\n    });\n  };\n\n  changefilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  componentDidMount() {\n    console.log('фаза рендера');\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    console.log(prevProps);\n    console.log(prevState);\n    console.log('Это фаза обновления');\n    if (contacts !== prevState.contacts) {\n      console.log('Обновилось поле контакты');\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n\n    const {\n      formSubmitHandler,\n      deleteContact,\n      changefilter,\n      getVisibleContacts,\n    } = this;\n\n    const visibleContacts = getVisibleContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={formSubmitHandler} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} changefilter={changefilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}